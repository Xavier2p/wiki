{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MetaDocs: My note system","text":""},{"location":"#with-pip","title":"with pip recommended","text":"<p>Material for MkDocs is published as a [Python package] and can be installed with <code>pip</code>, ideally by using a [virtual environment]. Open up a terminal and install Material for MkDocs with:</p> Latest8.x <pre><code>pip install mkdocs-material\n</code></pre> <pre><code>pip install mkdocs-material==\"8.*\" # (1)!\n</code></pre> <ol> <li> <p>Material for MkDocs uses [semantic versioning]1, which is why it's a     good idea to limit upgrades to the current major version.</p> <p>This will make sure that you don't accidentally [upgrade to the next major version], which may include breaking changes that silently corrupt your site. Additionally, you can use <code>pip freeze</code> to create a lockfile, so builds are reproducible at all times:</p> <pre><code>pip freeze &gt; requirements.txt\n</code></pre> <p>Now, the lockfile can be used for installation:</p> <pre><code>pip install -r requirements.txt\n</code></pre> </li> </ol> <p>This will automatically install compatible versions of all dependencies: [MkDocs], [Markdown], [Pygments] and [Python Markdown Extensions]. Material for MkDocs always strives to support the latest versions, so there's no need to install those packages separately.</p> <p> Apple Silicon (M1) and  Raspberry Pi</p> <p>The official Docker image is only available for <code>linux/amd64</code>. We recommend the third-party image by @afritzler if you want to run Material for MkDocs via Docker on <code>arm64</code> or <code>armv7</code>, as it is automatically built on every release:</p> <pre><code>docker pull ghcr.io/afritzler/mkdocs-material\n</code></pre> <ol> <li> <p>Note that improvements of existing features are sometimes released as patch releases, like for example improved rendering of content tabs, as they're not considered to be new features.\u00a0\u21a9</p> </li> </ol>"},{"location":"dev/","title":"dev","text":"<p>Go Up</p>"},{"location":"dev/#developper-stuff","title":"Developper stuff","text":"<p>Need some inspiration? see here! \ud83d\udc40 To create a new note, please use this template.</p>"},{"location":"dev/#nodes","title":"Nodes","text":"<pre><code>TABLE\n    language AS \"lang\",\n    subject,\n    file.folder AS \"path\"\nFROM \"dev\"\nWHERE type = \"moc\" AND file.name != \"dev\"\nSORT file.name ASC\n</code></pre>"},{"location":"dev/#cheatsheets","title":"Cheatsheets","text":"<pre><code>TABLE\n    language AS \"lang\",\n    subject,\n    file.folder AS \"path\"\nFROM \"dev\"\nWHERE file.folder != \"dev/ideas\" AND type = \"cheatsheet\"\nSORT file.cday DESC, pin DESC\n</code></pre>"},{"location":"dev/#all-notes","title":"All Notes","text":"<pre><code>TABLE\n    type,\n    language AS \"lang\",\n    file.folder AS \"path\"\nFROM \"dev\"\nSORT file.mtime DESC\n</code></pre>"},{"location":"c/c/","title":"c","text":"<p>Go Up</p>"},{"location":"c/c/#the-c-programming-language","title":"The C Programming Language","text":""},{"location":"docker/docker-compose/","title":"docker-compose","text":"<p>Go Up</p>"},{"location":"docker/docker-compose/#docker-compose","title":"docker-compose","text":""},{"location":"docker/docker/","title":"docker","text":"<p>Go Up</p>"},{"location":"docker/docker/#containerisation-with-docker","title":"Containerisation with Docker","text":""},{"location":"ideas/ccna-200-301/","title":"ccna-200-301","text":"<p>reference =&gt; [[ideas]]</p>"},{"location":"ideas/ccna-200-301/#ccna-200-301","title":"ccna-200-301","text":"<p>Pass the certif after that</p>"},{"location":"ideas/duster-ai/","title":"duster-ai","text":"<p>reference =&gt; [[ideas]]</p>"},{"location":"ideas/duster-ai/#dusterai","title":"DusterAI","text":""},{"location":"ideas/forest/","title":"forest","text":"<p>reference =&gt; [[ideas]]</p>"},{"location":"ideas/forest/#forest","title":"forest","text":"<p>Create an app to keep the focus on iOS.</p>"},{"location":"ideas/fortran-interpreter/","title":"fortran-interpreter","text":"<p>Go Up</p>"},{"location":"ideas/fortran-interpreter/#fortran-interpreter","title":"fortran-interpreter","text":"<p>Create an interpreter for <code>FORTRAN</code> because I don't found one. Based on the chall <code>ASMera</code> of DGHACK 2022 Use <code>Python</code> for the first version, but <code>Rust</code> can be used too</p>"},{"location":"ideas/fortran-interpreter/#links","title":"Links","text":"<p>https://michael-f-bryan.github.io/static-analyser-in-rust/book/lib.html https://github.com/Michael-F-Bryan/static-analyser-in-rust https://mohitkarekar.com/posts/pl/lexer/ https://github.com/goffrie/plex https://createlang.rs/intro.html https://crates.io/crates/logos-derive</p>"},{"location":"ideas/fortran-interpreter/#ideas","title":"Ideas","text":"<ul> <li>Verbose mode, that displays the comments</li> <li>Create a docs</li> <li>Name = <code>fortran.rs</code></li> </ul>"},{"location":"ideas/ideas/","title":"ideas","text":"<p>Go Up</p>"},{"location":"ideas/ideas/#dev-ideas","title":"Dev Ideas","text":"<p>Here, there are many ideas of dev projects, and there are all (or almost) really cool</p> <pre><code>TABLE\n    subject,\n    language AS \"lang\",\n    state,\n    category\nFROM \"dev/ideas\"\nWHERE file.name != \"ideas\"\nSORT state DESC\n</code></pre>"},{"location":"ideas/learn-ansible/","title":"learn-ansible","text":"<p>Go Up</p>"},{"location":"ideas/learn-ansible/#ansible","title":"ansible","text":""},{"location":"ideas/maivy-doctolib/","title":"maivy-doctolib","text":"<p>reference =&gt; [[ideas]]</p>"},{"location":"ideas/maivy-doctolib/#maivy-doctolib","title":"maivy-doctolib","text":"<p>Clone of doctolib based on NextCloud + Appointment taking + following patients + etc</p>"},{"location":"ideas/metanotes/","title":"metanotes","text":"<p>[[ideas|Go Up]]</p>"},{"location":"ideas/metanotes/#metanotes","title":"metanotes","text":"<p>Setup my front end for my notes</p>"},{"location":"ideas/online-cv/","title":"online-cv","text":"<p>reference =&gt; [[ideas]]</p>"},{"location":"ideas/online-cv/#online-cv","title":"online-cv","text":"<ul> <li>links to my projects</li> <li>hosted on github pages</li> <li>the same idea than the physical</li> <li>maybe different pages for each goal</li> </ul>"},{"location":"ideas/openstack/","title":"openstack","text":"<p>Go Up</p>"},{"location":"ideas/openstack/#openstack","title":"openstack","text":""},{"location":"ideas/root-me/","title":"root-me","text":"<p>Go Up</p>"},{"location":"ideas/root-me/#root-me","title":"root-me","text":""},{"location":"ideas/sandbox-discord/","title":"sandbox-discord","text":"<p>reference =&gt; [[ideas]]</p>"},{"location":"ideas/sandbox-discord/#sandbox-discord","title":"sandbox-discord","text":"<p>Create a discord server to: + view streams of monitoring + follow activities on github + dev bots + etc</p>"},{"location":"ideas/tasks-cli/","title":"tasks-cli","text":"<p>[[ideas|Go Up]]</p>"},{"location":"ideas/tasks-cli/#tasks-cli","title":"tasks-cli","text":"<p>Use python  Use flet to UI</p>"},{"location":"linux/linux/","title":"linux","text":"<p>Go Up</p>"},{"location":"linux/linux/#the-linux-operating-system","title":"The Linux Operating System","text":""},{"location":"linux/linux/#1-useful-commands-in-linux","title":"1. Useful Commands in Linux","text":""},{"location":"linux/rights/","title":"rights","text":"<p>Go Up</p>"},{"location":"linux/rights/#rights","title":"rights","text":""},{"location":"linux/commands/cat/","title":"cat","text":"<p>Go Up</p>"},{"location":"linux/commands/cat/#cat","title":"<code>cat</code>","text":""},{"location":"linux/commands/cat/#description","title":"Description","text":""},{"location":"linux/commands/cat/#usage","title":"Usage","text":""},{"location":"linux/commands/cat/#options","title":"Options","text":""},{"location":"linux/commands/cat/#remarks","title":"Remarks","text":""},{"location":"linux/commands/cd/","title":"cd","text":"<p>Go Up</p>"},{"location":"linux/commands/cd/#cd","title":"<code>cd</code>","text":""},{"location":"linux/commands/cd/#description","title":"Description","text":"<p>The\u00a0<code>cd</code>\u00a0command changes the current directory (cd\u00a0stands for\u00a0**c**hange\u00a0**d**irectory). Type\u00a0<code>cd</code>\u00a0without parameters to move into your home directory.</p>"},{"location":"linux/commands/cd/#usage","title":"Usage","text":"<pre><code>cd &lt;path&gt; </code></pre>"},{"location":"linux/commands/cd/#remarks","title":"Remarks","text":"<ul> <li><code>cd -</code> bring back to the previous directory</li> <li>I personally use a function to do a <code>ls</code> automatically after <code>cd</code>.   The code is here: (in the <code>.{$SHELL}rc</code>) <pre><code>function cd {\nbuiltin cd \"$@\" &amp;&amp; ls\n}\n</code></pre></li> </ul>"},{"location":"linux/commands/clear/","title":"clear","text":"<p>Go Up</p>"},{"location":"linux/commands/clear/#clear","title":"<code>clear</code>","text":""},{"location":"linux/commands/clear/#description","title":"Description","text":""},{"location":"linux/commands/clear/#usage","title":"Usage","text":""},{"location":"linux/commands/clear/#options","title":"Options","text":""},{"location":"linux/commands/clear/#remarks","title":"Remarks","text":""},{"location":"linux/commands/commands/","title":"basic-commands","text":"<p>Go Up</p>"},{"location":"linux/commands/commands/#useful-commands","title":"Useful Commands","text":""},{"location":"linux/commands/commands/#basics","title":"Basics","text":"usage command list all files in directory <code>ls</code> see where we are on filesystem <code>pwd</code> see the logic of directory <code>tree</code> change directory <code>cd</code> create file <code>touch</code> print in <code>stdout</code> <code>echo</code> display a file in <code>stdout</code> <code>cat</code> copy file <code>cp</code> create a new directory <code>mkdir</code> move file <code>mv</code> remove file <code>rm</code> remove empty directory <code>rmdir</code> link to a file <code>ln</code> clear the terminal <code>clear</code> usage command connect to a distant pc <code>ssh</code> the blood of the vein <code>vim</code> minimal text editor <code>nano</code> crypt a file <code>shred</code> who am I <code>whoami</code> create new user <code>useradd</code> root mode <code>sudo</code> create new user with parameters <code>adduser</code> change the user <code>su</code> exit the command <code>exit</code> change password <code>passwd</code> debian package manager <code>apt</code> inspect user (install needed) <code>finger</code> open manpage <code>man</code> what is this command <code>whatis</code> what is the path of the command <code>which</code> extended <code>which</code> <code>whereis</code> download things from Internet <code>wget</code> other downloader <code>curl</code> compress file <code>zip</code> decompress file compressed <code>unzip</code> display file one page at the time <code>less</code> display the beginning of a file <code>head</code> display the end of a file <code>tail</code> compare two files <code>cmp</code> see the differences between two files <code>diff</code> sort alphabetically <code>sort</code> find a file <code>find</code> change attributes of a file <code>chmod</code> change the ownership of a file <code>chown</code> ip address (in <code>net-tools</code> package) <code>ifconfig</code> ip address (can't work) <code>ip address</code> extract content of a file <code>grep</code> <code>grep</code> ++ <code>awk</code> DNS configured <code>resolvectl</code> test the status of a server <code>ping</code> see the path to a website <code>traceroute</code> see the open ports in the machine <code>netstat</code> see the open ports, but in modern <code>ss</code> config of firewall <code>iptables</code> open ports <code>upw</code> see the system name <code>uname</code> pretty system infos display <code>neofetch</code> display a calendar <code>cal</code> calculator in terminal <code>bc</code> show the free memory in the system <code>free</code> state of disks <code>df</code> show the process running <code>ps</code> show the process, and more infos <code>top</code> pretty <code>top</code> <code>htop</code> force stop process <code>kill</code> kill without process id <code>pkill</code> manage services in system <code>systemctl</code> see the history of the typed commands <code>history</code> reboot the pc <code>reboot</code> shutdown the pc <code>shutdown</code>"},{"location":"linux/commands/cp/","title":"cp","text":"<p>Go Up</p>"},{"location":"linux/commands/cp/#cp","title":"<code>cp</code>","text":""},{"location":"linux/commands/cp/#description","title":"Description","text":""},{"location":"linux/commands/cp/#usage","title":"Usage","text":""},{"location":"linux/commands/cp/#options","title":"Options","text":""},{"location":"linux/commands/cp/#remarks","title":"Remarks","text":""},{"location":"linux/commands/echo/","title":"echo","text":"<p>Go Up</p>"},{"location":"linux/commands/echo/#echo","title":"<code>echo</code>","text":""},{"location":"linux/commands/echo/#description","title":"Description","text":""},{"location":"linux/commands/echo/#usage","title":"Usage","text":""},{"location":"linux/commands/echo/#options","title":"Options","text":""},{"location":"linux/commands/echo/#remarks","title":"Remarks","text":""},{"location":"linux/commands/ln/","title":"ln","text":"<p>Go Up</p>"},{"location":"linux/commands/ln/#ln","title":"<code>ln</code>","text":""},{"location":"linux/commands/ln/#description","title":"Description","text":""},{"location":"linux/commands/ln/#usage","title":"Usage","text":""},{"location":"linux/commands/ln/#options","title":"Options","text":""},{"location":"linux/commands/ln/#remarks","title":"Remarks","text":""},{"location":"linux/commands/ls/","title":"ls","text":"<p>Go Up</p>"},{"location":"linux/commands/ls/#ls","title":"<code>ls</code>","text":""},{"location":"linux/commands/ls/#description","title":"Description","text":"<p>The\u00a0<code>ls</code>\u00a0command lists the directory contents (ls\u00a0is shorthand for\u00a0**l**i**s**t). Without parameters, it lists the contents of the current directory.</p>"},{"location":"linux/commands/ls/#usage","title":"Usage","text":"<pre><code>ls [options] &lt;path&gt;\n</code></pre>"},{"location":"linux/commands/ls/#options","title":"Options","text":""},{"location":"linux/commands/ls/#-f","title":"<code>-F</code>","text":"<p>Display indicators of type of file Can be <code>--classify</code> in long format</p> symbol meaning None Non executable file * Regular executable file / Directory Other Special file"},{"location":"linux/commands/ls/#-l","title":"<code>-l</code>","text":"<p>One line long listing format Format :</p> type rights number owner group filesize last modification filename <p>type can be <code>d</code> if file is directory or <code>-</code> if is regular file. Otherwise, it's a special file.</p>"},{"location":"linux/commands/ls/#-h","title":"<code>-h</code>","text":"<p>Human readable filesize Can be <code>--human-readable</code> in long format</p>"},{"location":"linux/commands/ls/#-a","title":"<code>-a</code>","text":"<p>All the files, with hidden and <code>../.</code> Can be <code>--all</code> in long format</p>"},{"location":"linux/commands/ls/#-a_1","title":"<code>-A</code>","text":"<p>All the files, but without <code>../.</code></p>"},{"location":"linux/commands/ls/#remarks","title":"Remarks","text":"<ul> <li>there are about 60 options for <code>ls</code></li> <li>I personally use <code>lsd</code> instead of builtin <code>ls</code>. It provide more functionality, like icons and sorts.   Config: (in <code>.{$SHELL}rc</code>) <pre><code>alias ls='lsd'\n</code></pre></li> </ul>"},{"location":"linux/commands/mkdir/","title":"mkdir","text":"<p>Go Up</p>"},{"location":"linux/commands/mkdir/#mkdir","title":"<code>mkdir</code>","text":""},{"location":"linux/commands/mkdir/#description","title":"Description","text":""},{"location":"linux/commands/mkdir/#usage","title":"Usage","text":""},{"location":"linux/commands/mkdir/#options","title":"Options","text":""},{"location":"linux/commands/mkdir/#remarks","title":"Remarks","text":""},{"location":"linux/commands/mv/","title":"mv","text":"<p>Go Up</p>"},{"location":"linux/commands/mv/#mv","title":"<code>mv</code>","text":""},{"location":"linux/commands/mv/#description","title":"Description","text":""},{"location":"linux/commands/mv/#usage","title":"Usage","text":""},{"location":"linux/commands/mv/#options","title":"Options","text":""},{"location":"linux/commands/mv/#remarks","title":"Remarks","text":""},{"location":"linux/commands/pwd/","title":"pwd","text":"<p>Go Up</p>"},{"location":"linux/commands/pwd/#pwd","title":"<code>pwd</code>","text":""},{"location":"linux/commands/pwd/#description","title":"Description","text":"<p>The\u00a0<code>pwd</code>\u00a0command prints the name of the current directory (pwd\u00a0stands for\u00a0**p**rint\u00a0**w**orking\u00a0**d**irectory). Try this command and see what your current directory is.</p>"},{"location":"linux/commands/pwd/#usage","title":"Usage","text":"<pre><code>pwd\n</code></pre>"},{"location":"linux/commands/rm/","title":"rm","text":"<p>Go Up</p>"},{"location":"linux/commands/rm/#rm","title":"<code>rm</code>","text":""},{"location":"linux/commands/rm/#description","title":"Description","text":""},{"location":"linux/commands/rm/#usage","title":"Usage","text":""},{"location":"linux/commands/rm/#options","title":"Options","text":""},{"location":"linux/commands/rm/#remarks","title":"Remarks","text":""},{"location":"linux/commands/rmdir/","title":"rmdir","text":"<p>Go Up</p>"},{"location":"linux/commands/rmdir/#rmdir","title":"<code>rmdir</code>","text":""},{"location":"linux/commands/rmdir/#description","title":"Description","text":""},{"location":"linux/commands/rmdir/#usage","title":"Usage","text":""},{"location":"linux/commands/rmdir/#options","title":"Options","text":""},{"location":"linux/commands/rmdir/#remarks","title":"Remarks","text":""},{"location":"linux/commands/touch/","title":"touch","text":"<p>Go Up</p>"},{"location":"linux/commands/touch/#touch","title":"<code>touch</code>","text":""},{"location":"linux/commands/touch/#description","title":"Description","text":""},{"location":"linux/commands/touch/#usage","title":"Usage","text":""},{"location":"linux/commands/touch/#options","title":"Options","text":""},{"location":"linux/commands/touch/#remarks","title":"Remarks","text":""},{"location":"linux/commands/tree/","title":"tree","text":"<p>Go Up</p>"},{"location":"linux/commands/tree/#tree","title":"<code>tree</code>","text":""},{"location":"linux/commands/tree/#description","title":"Description","text":"<p>The\u00a0<code>ls</code>\u00a0command is not the only one that allows you to list directory contents, but it is the most commonly used. Another really useful command is the\u00a0<code>tree</code>\u00a0command. The\u00a0<code>tree</code>\u00a0command allows you to list directory contents in a tree-like format. Without parameters, it lists the contents of the current directory.</p>"},{"location":"linux/commands/tree/#usage","title":"Usage","text":"<pre><code>tree [options] &lt;path&gt;\n</code></pre>"},{"location":"linux/commands/tree/#options","title":"Options","text":""},{"location":"linux/commands/tree/#-a","title":"<code>-a</code>","text":"<p>Display all the files, with the hidden</p>"},{"location":"linux/commands/tree/#remarks","title":"Remarks","text":"<ul> <li>I personally use a feature of my <code>ls</code> provider <code>lsd</code> so I don't use tree with its options.</li> </ul>"},{"location":"network/network/","title":"network","text":"<p>Go Up</p>"},{"location":"network/network/#the-art-of-networking","title":"The Art of Networking","text":""},{"location":"network/200-301-CCNA/200-301-CCNA/","title":"200-301-CCNA","text":"<p>Go Up</p>"},{"location":"network/200-301-CCNA/200-301-CCNA/#ccna-200-301-network-fundamentals","title":"CCNA 200-301: Network Fundamentals","text":"<p>From the course of NetworkChuck.</p> <p>EP0: What is a Network? EP1: What is a Switch? EP2: What is a Router?</p>"},{"location":"network/200-301-CCNA/network-def/","title":"network-def","text":"<p>Go Up</p>"},{"location":"network/200-301-CCNA/network-def/#ep1-what-is-a-network","title":"EP1. What is a Network?","text":"<p>LAN: (for Local Area Network) + The network in Home/Company + Contains     + Switches     + Routers     + Firewall</p> <p>WAN: (for Wide Area Network) + The network outside</p> <p>Internet: Like a LAN but in Wide, just connections between many many routers</p> <p>Principle: communicate with another computer</p> <p>Router: allow two networks to talk to each other</p> <p>Switch: Connect computers of a same network</p> <p>Firewall: Protecting the network, allow good stuff and block the rest</p> <p>WAP: Wireless Access Point</p> <p>For some cases, the FW, the switch, the router, the modem are the same object</p> <p>Network Engineer: makes all network stuff work</p>"},{"location":"network/200-301-CCNA/router/","title":"router","text":"<p>Go Up</p>"},{"location":"network/200-301-CCNA/router/#ep3-what-is-a-router","title":"EP3. What is a Router?","text":""},{"location":"network/200-301-CCNA/switch/","title":"switch","text":"<p>Go Up</p>"},{"location":"network/200-301-CCNA/switch/#ep2-what-is-a-switch","title":"EP2. What is a Switch?","text":"<p>Connect computer of a same network. They can now talk with each other They have a number of ports, the number of pc we can connect to the switch</p>"},{"location":"network/200-301-CCNA/switch/#ethernet-cables","title":"Ethernet Cables","text":"<p>Computers talk via signals, and signals are transmitted to the switch through the wires </p> <p>Switch vs Hub : switch is smart, not the hub The hub doesn't target, it diffuse the requests to all of the ports</p>"},{"location":"network/200-301-CCNA/switch/#ping","title":"Ping","text":"<p>just test the status of a computer Target the IP address</p>"},{"location":"python/python/","title":"python","text":"<p>Go Up</p>"},{"location":"python/python/#the-python-programming-language","title":"The Python Programming Language","text":""},{"location":"rust/rust/","title":"rust","text":"<p>Go Up</p>"},{"location":"rust/rust/#the-rust-programming-language","title":"The Rust Programming Language","text":""},{"location":"rust/variable-types/","title":"variable-types","text":"<p>[[rust|Go Up]]</p>"},{"location":"rust/variable-types/#variable-types","title":"variable-types","text":""},{"location":"rust/variable-types/#integers","title":"Integers","text":"<p>Store signed integers in bytes  <pre><code>i8\ni16\ni32\ni64\n</code></pre></p> <p>For unsigned, there are: <pre><code>u8\nu16\nu32\nu64\n</code></pre></p>"},{"location":"rust/variable-types/#floats","title":"Floats","text":"<p>Store signed float <pre><code>f32\nf64\n</code></pre></p>"},{"location":"various/code-netiquet/","title":"code-netiquet","text":"<p>[[various|Go Up]]</p>"},{"location":"various/code-netiquet/#code-good-practices","title":"Code Good Practices","text":"<p>[!tip] Principle + write less is better + clean code is better + maintainable code is better + evolutive code is better + functional code is the way</p>"},{"location":"various/code-netiquet/#0-basics","title":"0. Basics","text":"<ul> <li>80 characters by line</li> <li>Format like the language would</li> <li>break line before each block</li> <li>Use ternary if possible (and if it don't complex the code)</li> <li>factorise code</li> </ul>"},{"location":"various/code-netiquet/#i-naming-stuff","title":"I. Naming stuff","text":"<ul> <li>No abbreviations</li> <li>Clear and precise name</li> <li>No the type of the things</li> <li>No the kind of the things</li> <li>Conform to language rules for case ([[#Type of case|see here]])</li> </ul>"},{"location":"various/code-netiquet/#ii-nesting-blocks","title":"II. Nesting blocks","text":"<ul> <li>respect only 3 levels of nest</li> <li>Tips<ul> <li>extract content to a new function</li> <li>invert some conditions to return more quickly</li> <li>Use classes and methods</li> </ul> </li> </ul>"},{"location":"various/code-netiquet/#appendix","title":"Appendix","text":""},{"location":"various/code-netiquet/#type-of-case","title":"Type of case","text":"<pre><code>snake_case\nSCREAMING_SNAKE_CASE\nPascalCase\ncamelCase\nkebab-case\n</code></pre>"},{"location":"various/latex-cheatsheet/","title":"latex-cheatsheet","text":"<p>Go Up</p>"},{"location":"various/latex-cheatsheet/#latex-recap","title":"Latex Recap","text":"\\[\\LaTeX\\,\\,\\,\\mathbb{RECAP}\\]"},{"location":"various/macos-commands/","title":"macos-commands","text":"<p>[[various|Go Up]]</p>"},{"location":"various/macos-commands/#top-macos-commands","title":"Top macOS commands","text":"<p>Many [[linux|Linux]] commands will be running, so please see also the list of [[commands|Linux Commands]].</p> <ul> <li><code>say</code> - Pronounce an expression   <pre><code>say &lt;what do you want to say&gt;\n</code></pre></li> <li><code>security find-generic-password</code> - See your wifi password   <pre><code>security find-generic-password -wa &lt;wifi name&gt;\n</code></pre></li> <li><code>pbcopy</code> - Copy the output of a command   <pre><code>&lt;command who create stdin&gt; | pbcopy\n</code></pre></li> <li><code>caffineate</code> - Keep your Mac on, until the terminal is closed   <pre><code>caffineate # ^C to stop\n</code></pre></li> <li><code>defaults write</code> - Change the default parameters of screenshots   <pre><code>defaults write com.apple.screencapture name &lt;name&gt;\ndefaults write com.apple.screencapture type &lt;type&gt;\ndefaults write com.apple.screencapture location &lt;path&gt;\n</code></pre></li> <li><code>sqlite3</code> - Delete the history of downloads   <pre><code>sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'delete from LSQuarantineEvent'\n</code></pre></li> <li><code>passwd</code> - Change password in CLI   <pre><code>passwd\n</code></pre></li> <li><code>ditto</code> - Newer <code>cp</code> command   <pre><code>ditto &lt;origin&gt; &lt;destination&gt;\n</code></pre></li> <li><code>df</code> - See disk storage   <pre><code>df -h\n</code></pre></li> <li><code>open</code> - Open file or directory in the right application   <pre><code>open &lt;path&gt;\n</code></pre></li> <li><code>ifconfig</code> - See IP address   <pre><code>ifconfig [en0] # optional, but show only the right one\nifconfig en0 | grep inet | awk '{ print $2 }'\n</code></pre></li> <li><code>dig</code> - DNS of a website   <pre><code>dig &lt;website name&gt;\n</code></pre></li> <li><code>top</code> - Process using the most CPU ressources   <pre><code>top top -rsize # sort by ram usage\n</code></pre></li> <li><code>which</code> - See which shell is using   <pre><code>which $SHELL\n</code></pre></li> <li><code>uptime</code> - How long the Mac running   <pre><code>uptime\n</code></pre></li> <li><code>qlmanage</code> - Quick Look for a file   <pre><code>qlmanage -p &lt;path&gt;\n</code></pre></li> <li><code>curl</code> - Download things   <pre><code>curl &lt;url&gt; &gt; &lt;file&gt;\ncurl wttr.in/&lt;city&gt; # display the weather\n</code></pre></li> <li><code>leave</code> - Set alarm to quit terminal   <pre><code>leave &lt;time&gt; # format: hhmm\n</code></pre></li> <li><code>spctl</code> - Disable gatekeeper   <pre><code>sudo spctl --master-disable\n</code></pre></li> <li><code>asciiquarium</code> - Your shell is an aquarium   <pre><code>asciiquarium\n</code></pre></li> <li><code>toilet</code> - Display ASCII Art   <pre><code>toilet &lt;text&gt;\n</code></pre></li> <li><code>http.server</code> - Start a web server at one place   <pre><code>python3 -m http.server\n</code></pre></li> <li><code>shutdown</code> - Shutdown the Mac   <pre><code>shutdown -h now # for now\nshutdown -r now # for restarting now\n</code></pre></li> <li><code>pam.d</code> - <code>sudo</code> with TouchID   <pre><code>sudo vim /etc/pam.d/sudo\n# in the first line, insert this :\nauth sufficient pam_tid.so\n</code></pre></li> </ul>"},{"location":"various/macos-commands/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":"<ul> <li><code>CMD</code>+<code>OPT</code>+<code>SHIFT</code>+<code>V</code> =&gt; paste without formating</li> </ul>"},{"location":"various/markdown-cheatsheet/","title":"markdown-cheatsheet","text":"<p>Go Up</p>"},{"location":"various/markdown-cheatsheet/#markdown-recap","title":"Markdown Recap","text":"<p>This note is a cheatsheet of the <code>.md</code> language. For all the possibilities in Obsidian, please visite this link.</p>"},{"location":"various/markdown-cheatsheet/#heading-1","title":"Heading 1","text":"<pre><code># Heading 1\n</code></pre>"},{"location":"various/markdown-cheatsheet/#heading-2","title":"Heading 2","text":"<pre><code>## Heading 2\n</code></pre>"},{"location":"various/markdown-cheatsheet/#heading-3","title":"Heading 3","text":"<pre><code>### Heading 3\n</code></pre>"},{"location":"various/markdown-cheatsheet/#heading-4","title":"Heading 4","text":"<pre><code>#### Heading 4\n</code></pre>"},{"location":"various/markdown-cheatsheet/#heading-5","title":"Heading 5","text":"<pre><code>##### Heading 5\n</code></pre>"},{"location":"various/markdown-cheatsheet/#heading-6","title":"Heading 6","text":"<pre><code>###### Heading 6\n</code></pre> <p>Quote <pre><code>&gt; Quote\n</code></pre></p> <p>Italic <pre><code>_Italic_\n*Italic*\n</code></pre></p> <p>Bold <pre><code>**Bold**\n__Bold__\n</code></pre></p> <p>%% Comment %% <pre><code>%% Comment %%\n</code></pre></p> <p><code>Code inline</code> <pre><code>`Code inline`\n</code></pre></p> <p><pre><code>Code block\n</code></pre> <pre><code>```lang\nCode block\n\u00f8``` \n</code></pre></p> <p>\\(\\(\\mathbb{E}\\mathrm{quation}\\;\\mathtt{block}\\)\\) <pre><code>$$\\mathbb{E}\\mathrm{quation}\\;\\mathtt{block}$$\n</code></pre></p> <ul> <li>List element <pre><code>+ List element\n- List element\n</code></pre></li> </ul>"},{"location":"various/markdown-cheatsheet/#callout","title":"Callout","text":"<pre><code>&gt;[!name]\n&gt; \n</code></pre> <p>[!info] information </p> <p>[!example] Example</p> <p>[!tip] tip</p> <p>[!warning] Warning</p> <p>[!note] note</p> <p>[!success] Success</p> <p>[!danger] Danger </p> <p>[!failure] Failure</p>"},{"location":"various/various/","title":"various","text":"<p>Go Up</p>"},{"location":"various/various/#various-things","title":"Various things","text":"<pre><code>LIST FROM \"dev/various\"\nWHERE file.name != \"various\"\n</code></pre>"}]}